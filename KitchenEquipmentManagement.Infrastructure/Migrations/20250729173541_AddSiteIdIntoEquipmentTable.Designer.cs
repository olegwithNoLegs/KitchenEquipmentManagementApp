// <auto-generated />
using KitchenEquipmentManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KitchenEquipmentManagement.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250729173541_AddSiteIdIntoEquipmentTable")]
    partial class AddSiteIdIntoEquipmentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.RegisteredEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("SiteId");

                    b.ToTable("RegisteredEquipments");
                });

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SiteId");

                    b.HasIndex("UserId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.Equipment", b =>
                {
                    b.HasOne("KitchenEquipmentManagement.Domain.Models.Site", null)
                        .WithMany("Equipments")
                        .HasForeignKey("SiteId");

                    b.HasOne("KitchenEquipmentManagement.Domain.Models.User", "User")
                        .WithMany("Equipments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.RegisteredEquipment", b =>
                {
                    b.HasOne("KitchenEquipmentManagement.Domain.Models.Equipment", "Equipment")
                        .WithMany("RegisteredEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KitchenEquipmentManagement.Domain.Models.Site", "Site")
                        .WithMany("RegisteredEquipments")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.Site", b =>
                {
                    b.HasOne("KitchenEquipmentManagement.Domain.Models.User", "User")
                        .WithMany("Sites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.Equipment", b =>
                {
                    b.Navigation("RegisteredEquipments");
                });

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.Site", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("RegisteredEquipments");
                });

            modelBuilder.Entity("KitchenEquipmentManagement.Domain.Models.User", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("Sites");
                });
#pragma warning restore 612, 618
        }
    }
}
